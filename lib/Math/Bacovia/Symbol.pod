=encoding utf8

=head1 NAME

Math::Bacovia::Symbol - Represents a symbolic value.

=head1 SYNOPSIS

    use 5.014;
    use Math::Bacovia qw(Symbol);

    my $x = Symbol('x');
    my $y = Symbol('y', 64);

    say $y->numeric;           #=> 64
    say $y->sqrt->numeric;     #=> 8
    say (($x + $y)->pretty);   #=> (x + y)

    foreach my $n (1..5) {
        $x->set($n);
        say "sinh(log($n)) = ", $x->log->sinh->simple->numeric;
    }

=head1 METHODS

This section describes the methods provided by the B<Math::Bacovia::Symbol> module.

=head2 new

    my $x = Math::Bacovia::Symbol->new("x");
    my $y = Math::Bacovia::Symbol->new("y", $value);

Constructs and returns a new B<Math::Bacovia::Symbol> object.

=head2 set

    $obj->set($value);

Assigns a (numerical) value to the symbolic self-object.

=head2 get

    my ($name, $value) = $obj->get;

Returns the name and the internal value of the self-object (if any).

=head2 eq

    $x == $y
    $x->eq($y)

Return a true value when C<x> and C<y> are symbolically equal.

=head1 SPECIAL METHODS

This section describes the special methods provided by the B<Math::Bacovia::Symbol> module.

=head2 pretty

    my $str = $obj->pretty;

Returns a human-readable stringification of the self-expression.

=head2 stringify

    my $str = $obj->stringify;

Returns a stringification of the self-expression.

=head2 numeric

    my $num = $obj->numeric;

Evaluates the self-expression numerically and returns a L<Math::AnyNum> object.

=head1 SEE ALSO

The other parts of B<Math::Bacovia>:

=over 4

=item * L<Math::Bacovia>

=item * L<Math::Bacovia::Fraction>

=item * L<Math::Bacovia::Difference>

=item * L<Math::Bacovia::Power>

=item * L<Math::Bacovia::Log>

=item * L<Math::Bacovia::Exp>

=item * L<Math::Bacovia::Sum>

=item * L<Math::Bacovia::Product>

=item * L<Math::Bacovia::Number>

=back

=head1 REPOSITORY

L<https://github.com/trizen/Math-Bacovia>

=head1 AUTHOR

Daniel Șuteu, C<< <trizen at cpan.org> >>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2017-2019 Daniel Șuteu

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.22.0 or,
at your option, any later version of Perl 5 you may have available.

=cut
